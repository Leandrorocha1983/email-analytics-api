#!/bin/bash

echo "üéØ DEMONSTRA√á√ÉO COMPLETA - EMAIL ANALYTICS API"
echo "=============================================="
echo ""

API_URL="http://localhost:8000/api/v1"
HEALTH_URL="http://localhost:8000/health"

# Verificar se API est√° rodando
echo "üîç Verificando se API est√° online..."
if ! curl -s "$HEALTH_URL" > /dev/null; then
    echo "‚ùå API n√£o est√° rodando. Inicie com: ./run_dev.sh"
    exit 1
fi
echo "‚úÖ API est√° rodando!"
echo ""

echo "‚ù§Ô∏è  0. HEALTH CHECK:"
curl -s "$HEALTH_URL" | python3 -m json.tool
echo ""

echo "üì§ 1. UPLOAD DE ARQUIVO:"
curl -X PUT "$API_URL/files/dados_avaliacao" -F "file=@data/input"
echo -e "\n"

echo "üìä 2. USU√ÅRIO COM MAIOR SIZE:"
curl -s "$API_URL/files/dados_avaliacao/max-size" | python3 -m json.tool
echo ""

echo "üìâ 3. USU√ÅRIO COM MENOR SIZE (B√îNUS):"
curl -s "$API_URL/files/dados_avaliacao/min-size" | python3 -m json.tool
echo ""

echo "üìù 4. USU√ÅRIOS ORDENADOS CRESCENTE:"
curl -s "$API_URL/files/dados_avaliacao/users?page=1&page_size=3" | python3 -m json.tool
echo ""

echo "üìù 5. USU√ÅRIOS ORDENADOS DECRESCENTE (B√îNUS):"
curl -s "$API_URL/files/dados_avaliacao/users?order=desc&page=1&page_size=3" | python3 -m json.tool
echo ""

echo "üîç 6. FILTRO POR USERNAME (B√îNUS):"
curl -s "$API_URL/files/dados_avaliacao/users?username=uol&page_size=3" | python3 -m json.tool
echo ""

echo "üì¨ 7. USU√ÅRIOS ENTRE FAIXA DE MENSAGENS:"
curl -s "$API_URL/files/dados_avaliacao/users/between?min_messages=1000000&max_messages=3000000&page_size=3" | python3 -m json.tool
echo ""

echo "üìã 8. LISTAGEM DE ARQUIVOS COM PAGINA√á√ÉO:"
curl -s "$API_URL/files" | python3 -m json.tool
echo ""

echo "‚ùå 9. TESTE DE ERRO - ARQUIVO N√ÉO ENCONTRADO:"
curl -s "$API_URL/files/arquivo_inexistente/max-size" | python3 -m json.tool
echo ""

echo "‚ùå 10. TESTE DE ERRO - NOME INV√ÅLIDO:"
echo "teste" | curl -s -X PUT "$API_URL/files/arquivo.inv√°lido" -F "file=@-" | python3 -m json.tool
echo ""

echo "üêö 11. TESTANDO SCRIPTS BASH DIRETAMENTE:"
echo "  Max size:"
./scripts/max-min-size.sh data/input
echo "  Min size:"
./scripts/max-min-size.sh data/input -min
echo "  Ordena√ß√£o (3 primeiros):"
./scripts/order-by-username.sh data/input | head -3
echo "  Entre mensagens:"
./scripts/between-msgs.sh data/input 1000000 3000000 | head -3

echo ""
echo "‚úÖ DEMONSTRA√á√ÉO CONCLU√çDA!"
echo "üìñ Documenta√ß√£o: http://localhost:8000/docs"
echo "üéØ Status Codes testados: 201, 200, 404, 400"
